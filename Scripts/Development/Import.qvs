/////////////////////////////////////////////////////////////////////////////
//  Name                Import.qvs
//  Purpose             
//  Author              Stefan Sonntag
/////////////////////////////////////////////////////////////////////////////

CALL logBox('Start $(vAppName) - Import');

LET vTableName = 'importedSQL';

// reset vLoadStart 
LET vLoadStart = date(floor($(vModelLoadStart)),'YYYY-MM-DD');

// reset vCurrentMonthStart, just in case
LET vCurrentMonthStart = date(floor(monthstart(today())),'YYYY-MM-DD');

// show values for debugging
CALL log('vLoadStart is $(vLoadStart)');
CALL log('vCurrentMonthStart is $(vCurrentMonthStart)');

DO WHILE vLoadStart <= vCurrentMonthStart

    // create the string
    LET vMonthEndString = text(date(floor(num(monthend(vLoadStart))),'YYYY-MM'));

    Import:
    LOAD
        autonumber(site_id&'-'&datetime)
                                AS %ID.Site,
        account_id              AS AccountID.Import,
        site_id                 AS SiteID.Import,           
        sum_product_count       AS SumProducts.Import,
        min_product_count       AS MinProducts.Import,
        max_product_count       AS MaxProducts.Import,
        avg_product_count       AS AvgProducts.Import,
        median_product_count    AS MedianProducts.Import,
        datetime                AS LoadDate.Import
        // applymap('NonBillableSites',site_id, dual('Yes',1)) 
        //                         AS Billable.Import
    FROM 
        $(vPlatformAreaDataStorage)$(vTableName)-Aggregated-Monthly-$(vMonthEndString).qvd] (qvd)
    WHERE 
        EXISTS(SiteNumber.Site, site_id)  // exclude employee sites etc.
    ;

    // add 1 month
    LET vLoadStart = addmonths( vLoadStart, 1);
   
LOOP

CALL logBox('End $(vAppName) - Import');

/////////////////////////////////////////////////////////////////
// 						 End Script
/////////////////////////////////////////////////////////////////